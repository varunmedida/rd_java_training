package com.epam.dao;

import java.util.ArrayList;
import java.util.function.Predicate;

import com.epam.exception.InsufficientQuantity;
import com.epam.model.Cart;
import com.epam.model.Category;
import com.epam.model.Product;
import com.epam.model.SubCategory;

public class OnlineShoppingDaoImpl implements OnlineShoppingDao {

	ArrayList<Category> categoryList = new ArrayList<>();
	ArrayList<SubCategory> subCategoryList = new ArrayList<>();
	ArrayList<Product> productList = new ArrayList<>();
	ArrayList<Cart> cartList = new ArrayList<>();

	public OnlineShoppingDaoImpl() {
		// TODO Auto-generated constructor stub
		categoryList.add(new Category(1, "Electronics"));
		categoryList.add(new Category(2, "Fashion"));
		subCategoryList.add(new SubCategory(1, 1, "Mobiles"));
		subCategoryList.add(new SubCategory(1, 2, "Laptops"));
		subCategoryList.add(new SubCategory(1, 3, "Home Appliance"));
		productList.add(new Product(1, 1, "IPhone", 5000, 7));
		productList.add(new Product(1, 2, "Samsung", 4000, 7));
		productList.add(new Product(1, 3, "Asus", 3000, 7));
		productList.add(new Product(2, 4, "Dell", 11000, 7));
		productList.add(new Product(2, 5, "Lenovo", 9000, 7));
		productList.add(new Product(2, 6, "Alien", 15000, 7));
	}

	public ArrayList<Category> getAllCategories() {
		// TODO Auto-generated method stub

		return categoryList;
	}

	@SuppressWarnings("unchecked")
	@Override
	public ArrayList<SubCategory> getSubCategoriesBasedOnCategory(int categoryOption) {
		// TODO Auto-generated method stub
		return (ArrayList<SubCategory>) filterList(subCategoryList,
				(Object subCategory) -> ((SubCategory) subCategory).getCategoryId() == categoryOption);
	}

	@SuppressWarnings("unchecked")
	@Override
	public ArrayList<Product> getProductsBasedOnSubCategory(int subCategoryOption) {
		// TODO Auto-generated method stub
		return (ArrayList<Product>) filterList(productList,
				(Object product) -> ((Product) product).getSubCategoryId() == subCategoryOption);
	}

	private ArrayList<?> filterList(ArrayList<?> subCategoryList, Predicate<Object> predicate) {
		// TODO Auto-generated method stub
		ArrayList<Object> finalList = new ArrayList<>();
		for (Object object : subCategoryList) {
			if (predicate.test(object)) {
				finalList.add(object);
			}
		}
		return finalList;
	}

	@Override
	public boolean addProductToCart(int productOption, int quantityAdded) {
		// TODO Auto-generated method stub
		boolean addedToCart = true;
		try {
		Product filteredProduct = null;
		Cart filteredCart = null;
		for (Product product : productList) {
			if (product.getProductId() == productOption) {
				filteredProduct = product;
			}
		}
		for (Cart cart : cartList) {
			if (cart.getProductId() == productOption) {
				filteredCart = cart;
			}
		}
		if (filteredCart == null) {
			if (quantityAdded < filteredProduct.getQuantityInStock()) {
				cartList.add(new Cart(filteredProduct.getProductId(), filteredProduct.getProductName(),
						filteredProduct.getProductPrice(), quantityAdded));
			} else {
				addedToCart = false;
			}

		} else {
			if (filteredCart.getQuantityAdded() + quantityAdded > filteredProduct.getQuantityInStock()) {
				addedToCart = false;
			} else {
				for (Cart cart : cartList) {
					if (cart.getProductId() == productOption) {
						cart.setQuantityAdded(filteredCart.getQuantityAdded() + quantityAdded);
					}
				}
			}
		}}catch (InsufficientQuantity quantity) {
			System.err.println("Insufficient Quantity to purchase!!");
		}

		return addedToCart;
	}

	@Override
	public ArrayList<Cart> viewProductsInCart() {
		// TODO Auto-generated method stub
		return cartList;
	}

}
